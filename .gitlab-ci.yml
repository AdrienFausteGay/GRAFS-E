default:
  image: python:3.12-slim

variables:
  DOC_DIR: "docs/source"                    # dossier Sphinx (conf.py dans docs/)
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  UV_PROJECT_ENVIRONMENT: ".venv"    # pour que uv crée .venv dans le repo
  SPHINXOPTS: "-W --keep-going"      # fail on warnings (retire -W si trop strict)

cache:
  paths:
    - .cache/pip
    - .venv

before_script:
  - apt-get update && apt-get install -y curl ca-certificates git && rm -rf /var/lib/apt/lists/*
  - curl -LsSf https://astral.sh/uv/install.sh | sh
  - export PATH="$HOME/.local/bin:$PATH"
  # Installe les deps de docs depuis le pyproject du projet (même repo)
  - uv sync --group docs

stages:
  - test
  - deploy

# Construit la doc sur branches & MRs et publie un artifact "preview"
docs:preview:
  stage: test
  script:
    - uv sync --group docs
    - uv pip install -e .
    - uv run sphinx-build -b html "$DOC_DIR" build/html $SPHINXOPTS
  artifacts:
    name: "docs-preview-$CI_COMMIT_REF_SLUG"
    when: always
    expire_in: 1 week
    paths:
      - build/html
    expose_as: "Docs preview"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_BRANCH && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH'

# Déploiement GitLab Pages officiel (uniquement depuis la branche par défaut)
pages:
  stage: deploy
  script:
    - uv sync --group docs
    - uv pip install -e .        # ← rend importable grafs_e pour Sphinx
    - uv run sphinx-build -b html "$DOC_DIR" public $SPHINXOPTS
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'

